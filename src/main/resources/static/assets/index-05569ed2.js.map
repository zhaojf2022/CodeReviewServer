{"version":3,"file":"index-05569ed2.js","sources":["../../src/layouts/components/Topbar/index.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'Topbar',\n})\n</script>\n<script lang=\"ts\" setup name=\"Topbar\">\nimport { compile } from 'path-to-regexp'\nimport Tools from '../Tools/index.vue'\nimport useSettingsStore from '@/store/modules/settings'\n\nconst route = useRoute()\n\nconst settingsStore = useSettingsStore()\n\nconst enableSubMenuCollapseButton = computed(() => {\n  return settingsStore.mode === 'mobile' || (\n    ['side', 'head', 'single'].includes(settingsStore.settings.menu.menuMode)\n      && settingsStore.settings.menu.enableSubMenuCollapseButton\n  )\n})\n\nconst breadcrumbList = computed(() => {\n  const breadcrumbList = []\n  if (settingsStore.settings.home.enable) {\n    breadcrumbList.push({\n      path: '/',\n      title: settingsStore.settings.home.title,\n    })\n  }\n  if (route.meta.breadcrumbNeste) {\n    breadcrumbList.push(...route.meta.breadcrumbNeste.filter(item => item.hide === false))\n  }\n  return breadcrumbList\n})\n\nconst scrollTop = ref(0)\nconst scrollOnHide = ref(false)\nonMounted(() => {\n  window.addEventListener('scroll', onScroll)\n})\nonUnmounted(() => {\n  window.removeEventListener('scroll', onScroll)\n})\nfunction onScroll() {\n  scrollTop.value = (document.documentElement || document.body).scrollTop\n}\nwatch(scrollTop, (val, oldVal) => {\n  const topbarHeight = parseInt(getComputedStyle(document.documentElement || document.body).getPropertyValue('--g-topbar-height'))\n  scrollOnHide.value = settingsStore.settings.topbar.mode === 'sticky' && val > oldVal && val > topbarHeight\n})\n\nfunction pathCompile(path: string) {\n  const toPath = compile(path)\n  return toPath(route.params)\n}\n</script>\n\n<template>\n  <div\n    class=\"topbar-container\" :class=\"{\n      [`topbar-${settingsStore.settings.topbar.mode}`]: true,\n      shadow: scrollTop,\n      hide: scrollOnHide,\n    }\" data-fixed-calc-width\n  >\n    <div class=\"left-box\">\n      <div v-if=\"enableSubMenuCollapseButton\" class=\"sidebar-collapse\" :class=\"{ 'is-collapse': settingsStore.settings.menu.subMenuCollapse }\" @click=\"settingsStore.toggleSidebarCollapse()\">\n        <el-icon>\n          <svg-icon name=\"toolbar-collapse\" />\n        </el-icon>\n      </div>\n      <el-breadcrumb v-if=\"settingsStore.settings.breadcrumb.enable && settingsStore.mode === 'pc' && settingsStore.settings.app.routeBaseOn !== 'filesystem'\">\n        <transition-group name=\"breadcrumb\">\n          <el-breadcrumb-item v-for=\"(item, index) in breadcrumbList\" :key=\"item.path\" :to=\"index < breadcrumbList.length - 1 ? pathCompile(item.path) : ''\">\n            {{ item.title ?? '[ 无标题 ]' }}\n          </el-breadcrumb-item>\n        </transition-group>\n      </el-breadcrumb>\n    </div>\n    <Tools />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.topbar-container {\n  position: absolute;\n  z-index: 999;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: var(--g-topbar-height);\n  background-color: var(--g-toolbar-bg);\n  transition: width 0.3s, top 0.3s, transform 0.3s, background-color 0.3s, var(--el-transition-box-shadow);\n\n  &.topbar-fixed,\n  &.topbar-sticky {\n    position: fixed;\n\n    &.shadow {\n      box-shadow: 0 10px 10px -10px var(--g-box-shadow-color);\n    }\n  }\n\n  &.topbar-sticky.hide {\n    top: calc(var(--g-topbar-height) * -1) !important;\n  }\n\n  .left-box {\n    display: flex;\n    align-items: center;\n    padding-right: 50px;\n    overflow: hidden;\n    mask-image: linear-gradient(90deg, #000 0%, #000 calc(100% - 50px), transparent);\n\n    .sidebar-collapse {\n      display: flex;\n      align-items: center;\n      padding: 0 20px;\n      height: 50px;\n      cursor: pointer;\n\n      .el-icon {\n        color: var(--el-text-color-primary);\n        transition: var(--el-transition-color), var(--el-transition-md-fade);\n      }\n\n      &:hover .el-icon {\n        color: var(--el-color-primary);\n      }\n\n      &.is-collapse .el-icon {\n        transform: rotateZ(-180deg);\n      }\n\n      & + .el-breadcrumb {\n        margin-left: 0;\n      }\n    }\n\n    :deep(.el-breadcrumb) {\n      margin-left: 20px;\n      white-space: nowrap;\n\n      .el-breadcrumb__item {\n        display: inline-block;\n        float: none;\n\n        span {\n          font-weight: normal;\n        }\n\n        &:last-child span {\n          color: #97a8be;\n        }\n      }\n    }\n  }\n}\n\n// 面包屑动画\n.breadcrumb-enter-active {\n  transition: all 0.25s;\n}\n\n.breadcrumb-enter-from,\n.breadcrumb-leave-active {\n  opacity: 0;\n  transform: translateX(30px) skewX(-50deg);\n}\n</style>\n"],"names":["__default__","defineComponent","route","useRoute","settingsStore","useSettingsStore","enableSubMenuCollapseButton","computed","breadcrumbList","breadcrumbList2","item","scrollTop","ref","scrollOnHide","onMounted","onScroll","onUnmounted","watch","val","oldVal","topbarHeight","pathCompile","path","compile"],"mappings":"uRAEAA,EAAAC,EAAA,CAA+B,KAAA,QAE/B,CAAA,qBAOA,MAAAC,EAAAC,IAEAC,EAAAC,IAEAC,EAAAC,EAAA,IACEH,EAAA,OAAA,UAAA,CAAA,OAAA,OAAA,QAAA,EAAA,SAAAA,EAAA,SAAA,KAAA,QAAA,GAAAA,EAAA,SAAA,KAAA,2BAEmC,EAIrCI,EAAAD,EAAA,IAAA,CACE,MAAAE,EAAA,CAAA,EACA,OAAAL,EAAA,SAAA,KAAA,QACEK,EAAA,KAAA,CAAoB,KAAA,IACZ,MAAAL,EAAA,SAAA,KAAA,KAC6B,CAAA,EAGvCF,EAAA,KAAA,iBACEO,EAAA,KAAA,GAAAP,EAAA,KAAA,gBAAA,OAAAQ,GAAAA,EAAA,OAAA,EAAA,CAAA,EAEFD,CAAO,CAAA,EAGTE,EAAAC,EAAA,CAAA,EACAC,EAAAD,EAAA,EAAA,EACAE,EAAA,IAAA,CACE,OAAA,iBAAA,SAAAC,CAAA,CAA0C,CAAA,EAE5CC,EAAA,IAAA,CACE,OAAA,oBAAA,SAAAD,CAAA,CAA6C,CAAA,EAE/C,SAAAA,GAAA,CACEJ,EAAA,OAAA,SAAA,iBAAA,SAAA,MAAA,SAA8D,CAEhEM,EAAAN,EAAA,CAAAO,EAAAC,IAAA,CACE,MAAAC,EAAA,SAAA,iBAAA,SAAA,iBAAA,SAAA,IAAA,EAAA,iBAAA,mBAAA,CAAA,EACAP,EAAA,MAAAT,EAAA,SAAA,OAAA,OAAA,UAAAc,EAAAC,GAAAD,EAAAE,CAA8F,CAAA,EAGhG,SAAAC,EAAAC,EAAA,CAEE,OADAC,EAAAD,CAAA,EACApB,EAAA,MAAA,CAA0B"}